import{S as P,i,a as E}from"./assets/vendor-da186403.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))a(e);new MutationObserver(e=>{for(const s of e)if(s.type==="childList")for(const d of s.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&a(d)}).observe(document,{childList:!0,subtree:!0});function o(e){const s={};return e.integrity&&(s.integrity=e.integrity),e.referrerPolicy&&(s.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?s.credentials="include":e.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function a(e){if(e.ep)return;e.ep=!0;const s=o(e);fetch(e.href,s)}})();let n=1,u="";const f=40,$={captionsData:"alt",captionsDelay:250},h=new P(".image-card",$),S=document.querySelector("form"),y=document.querySelector(".loader"),w=document.querySelector(".gallery"),p=document.querySelector(".load-more");c();l();S.addEventListener("submit",async function(t){if(t.preventDefault(),m(),u=document.querySelector("input").value.trim(),u===""){i.error({title:"Error",message:"Please enter a search query."});return}v(),n=1;try{const r=await b(u,n);c(),r.hits.length>0?(L(r.hits),h.refresh(),r.totalHits<=f?l():M()):(q(),m(),l())}catch(r){c(),console.error("Error fetching images:",r.message),i.error({title:"Error",message:"An error occurred while fetching images. Please try again."})}});p.addEventListener("click",async function(){v(),n++;try{const t=await b(u,n);c(),t.totalHits>0?(L(t.hits),h.refresh(),T(),t.totalHits<=n*f&&(l(),g())):(l(),g())}catch(t){c(),console.error("Error fetching more images:",t.message),i.error({title:"Error",message:"An error occurred while fetching more images. Please try again."})}});async function b(t,r){const a=`https://pixabay.com/api/?key=42011600-6d993b5d4f0ba2a9af1a5ffd0&q=${t}&image_type=photo&orientation=horizontal&safesearch=true&pretty=true&page=${r}&per_page=${f}`;try{const e=await E.get(a);if(e.status!==200)throw new Error(`HTTP error! Status: ${e.status}`);return e.data}catch(e){throw new Error(`Error fetching data: ${e.message}`)}}function L(t){const r=t.map(o=>`
        <li class="image-item">
          <a href="${o.largeImageURL}" class="image-card">
            <div class="image-container">
              <img src="${o.webformatURL}" alt="${o.tags}">
            </div>
            <div class="image-info">
              <span><span class="label">Likes</span> ${o.likes}</span>
              <span><span class="label">Views</span> ${o.views}</span>
              <span><span class="label">Comments</span> ${o.comments}</span>
              <span><span class="label">Downloads</span> ${o.downloads}</span>
            </div>
          </a>
        </li>
      `).join("");w.insertAdjacentHTML("beforeend",r)}function m(){w.innerHTML=""}function v(){y.style.display="block"}function c(){y.style.display="none"}function q(){i.error({title:"Error",message:"Sorry, there are no images matching your search query. Please try again!"})}function M(){p.style.visibility="visible"}function l(){p.style.visibility="hidden"}function g(){i.info({title:"Info",message:"We are sorry, but you have reached the end of search results."})}function T(){const t=document.querySelector(".image-card").getBoundingClientRect().height,r=4,a=window.scrollY+t*r;window.scrollTo({top:a,behavior:"smooth"})}
//# sourceMappingURL=commonHelpers.js.map
